# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: data.proto, enums.proto, webcast.proto
# plugin: python-betterproto
# This file has been @generated
import builtins
from dataclasses import dataclass
from typing import (
    Dict,
    List,
)

import betterproto


class AuditStatus(betterproto.Enum):
    AUDITSTATUSUNKNOWN = 0
    AUDITSTATUSPASS = 1
    AUDITSTATUSFAILED = 2
    AUDITSTATUSREVIEWING = 3
    AUDITSTATUSFORBIDDEN = 4


class EmoteType(betterproto.Enum):
    EMOTETYPENORMAL = 0
    EMOTETYPEWITHSTICKER = 1


class ContentSource(betterproto.Enum):
    CONTENTSOURCEUNKNOWN = 0
    CONTENTSOURCENORMAL = 1
    CONTENTSOURCECAMERA = 2


class EmotePrivateType(betterproto.Enum):
    NORMAL = 0
    SUB_WAVE = 1


class SubscribeType(betterproto.Enum):
    SUBSCRIBETYPE_ONCE = 0
    SUBSCRIBETYPE_AUTO = 1
    SUBSCRIBETYPE_DEFAULT = 100


class OldSubscribeStatus(betterproto.Enum):
    OLDSUBSCRIBESTATUS_FIRST = 0
    OLDSUBSCRIBESTATUS_RESUB = 1
    OLDSUBSCRIBESTATUS_SUBINGRACEPERIOD = 2
    OLDSUBSCRIBESTATUS_SUBNOTINGRACEPERIOD = 3
    OLDSUBSCRIBESTATUS_DEFAULT = 100


class SubscribingStatus(betterproto.Enum):
    SUBSCRIBINGSTATUS_UNKNOWN = 0
    SUBSCRIBINGSTATUS_ONCE = 1
    SUBSCRIBINGSTATUS_CIRCLE = 2
    SUBSCRIBINGSTATUS_CIRCLECANCEL = 3
    SUBSCRIBINGSTATUS_REFUND = 4
    SUBSCRIBINGSTATUS_INGRACEPERIOD = 5
    SUBSCRIBINGSTATUS_NOTINGRACEPERIOD = 6


class LinkmicStatus(betterproto.Enum):
    Disable = 0
    Enable = 1
    Just_Following = 2
    Multi_Linking = 3
    Multi_Linking_Only_Following = 4


class MemberMessageAction(betterproto.Enum):
    UNKNOWN = 0
    JOINED = 1
    SUBSCRIBED = 3


class ControlAction(betterproto.Enum):
    ControlActionUNKNOWN = 0
    STREAM_PAUSED = 1
    STREAM_ENDED = 3


class LinkLayerMessageType(betterproto.Enum):
    Linker_Unknown = 0
    Linker_Create = 1
    Linker_Invite = 2
    Linker_Apply = 3
    Linker_Permit = 4
    Linker_Reply = 5
    Linker_Kick_Out = 6
    Linker_Cancel_Apply = 7
    Linker_Cancel_Invite = 8
    Linker_Leave = 9
    Linker_Finish = 10
    Linker_List_Change = 11
    Linker_Join_Direct = 12
    Linker_Join_Group = 13
    Linker_Permit_Group = 14
    Linker_Cancel_Group = 15
    Linker_Leave_Group = 16
    Linker_P2P_Group_Change = 17
    Linker_Group_Change = 18


class BarrageType(betterproto.Enum):
    BarrageType_Unknown = 0
    EComOrdering = 1
    EComBuying = 2
    Normal = 3
    Subscribe = 4
    EventView = 5
    EventRegistered = 6
    SubscribeGift = 7
    UserUpgrade = 8
    GradeUserEntranceNotification = 9
    FansLevelUpgrade = 10
    FansLevelEntrance = 11
    GamePartnership = 12


class CommonImDispatchStrategy(betterproto.Enum):
    IM_DISPATCH_STRATEGY_DEFAULT = 0
    IM_DISPATCH_STRATEGY_BYPASS_DISPATCH_QUEUE = 1


class BadgeStructDataCase(betterproto.Enum):
    DATA_NOT_SET = 0
    IMAGE = 20
    TEXT = 21
    STR = 22
    COMBINE = 23


class BadgeStructBadgeDisplayType(betterproto.Enum):
    BADGEDISPLAYTYPE_UNKNOWN = 0
    BADGEDISPLAYTYPE_IMAGE = 1
    BADGEDISPLAYTYPE_TEXT = 2
    BADGEDISPLAYTYPE_STRING = 3
    BADGEDISPLAYTYPE_COMBINE = 4


class BadgeStructPosition(betterproto.Enum):
    POSITIONUNKNOWN = 0
    POSITIONLEFT = 1
    POSITIONRIGHT = 2


class UserLiveEventInfoEventPayMethod(betterproto.Enum):
    """@EventPayMethod  webcast.data.LiveEventInfo"""

    EVENTPAYMETHODINVALID = 0
    EVENTPAYMETHODCOINS = 1
    EVENTPAYMETHODCASH = 2


class UserEcommerceEntranceCreatorType(betterproto.Enum):
    """@CreatorType  webcast.data.User.EcommerceEntrance"""

    UNDEFINED = 0
    OFFICIAL = 1
    MARKET = 2
    NORMAL = 3


class UserEcommerceEntranceEntranceType(betterproto.Enum):
    """@EntranceType  webcast.data.User.EcommerceEntrance"""

    PROFILE = 0
    SHOWCASE = 1
    SHOP = 2


class UserEcommerceEntranceShopEntranceInfoStoreLabelStoreBrandLabelType(
    betterproto.Enum
):
    """
    @StoreBrandLabelType
    webcast.data.User.EcommerceEntrance.ShopEntranceInfo.StoreLabel
    """

    NONE = 0
    OFFICIAL = 1
    AUTHORIZED = 2
    STORE_BRAND_LABEL_TYPE_BLUE_V = 3
    STORE_BRAND_LABEL_TYPE_TOP_CHOICE = 4


class UserFansClubPreferntialType(betterproto.Enum):
    """@PreferntialType  webcast.data.User.FansClub"""

    PRESONALPROFILE = 0
    OTHERROOM = 1


class UserFansClubFansClubDataBadgeIcon(betterproto.Enum):
    """@BadgeIcon  webcast.data.User.FansClub.FansClubData"""

    UNKNOWN = 0
    ICON = 1
    SMALLICON = 2


class UserFansClubFansClubDataUserFansClubStatus(betterproto.Enum):
    """@UserFansClubStatus  webcast.data.User.FansClub.FansClubData"""

    NOTJOINED = 0
    ACTIVE = 1
    INACTIVE = 2


class WebcastBarrageMessageBarrageType(betterproto.Enum):
    """@BarrageType  webcast.im.BarrageMessage"""

    UNKNOWN = 0
    ECOMORDERING = 1
    ECOMBUYING = 2
    NORMAL = 3
    SUBSCRIBE = 4
    EVENTVIEW = 5
    EVENTREGISTERED = 6
    SUBSCRIBEGIFT = 7
    USERUPGRADE = 8
    GRADEUSERENTRANCENOTIFICATION = 9
    FANSLEVELUPGRADE = 10
    FANSLEVELENTRANCE = 11
    GAMEPARTNERSHIP = 12


@dataclass(eq=False, repr=False)
class Common(betterproto.Message):
    """@Common"""

    method: str = betterproto.string_field(1)
    msg_id: int = betterproto.int64_field(2)
    room_id: int = betterproto.int64_field(3)
    create_time: int = betterproto.int64_field(4)
    monitor: int = betterproto.int32_field(5)
    is_show_msg: bool = betterproto.bool_field(6)
    describe: str = betterproto.string_field(7)
    display_text: "Text" = betterproto.message_field(8)
    fold_type: int = betterproto.int64_field(9)
    anchor_fold_type: int = betterproto.int64_field(10)
    priority_score: int = betterproto.int64_field(11)
    log_id: str = betterproto.string_field(12)
    msg_process_filter_k: str = betterproto.string_field(13)
    msg_process_filter_v: str = betterproto.string_field(14)
    from_idc: str = betterproto.string_field(15)
    to_idc: str = betterproto.string_field(16)
    filter_msg_tags_list: List[str] = betterproto.string_field(17)
    sei: "CommonLiveMessageSei" = betterproto.message_field(18)
    depend_root_id: "CommonLiveMessageId" = betterproto.message_field(19)
    depend_id: "CommonLiveMessageId" = betterproto.message_field(20)
    anchor_priority_score: int = betterproto.int64_field(21)
    room_message_heat_level: int = betterproto.int64_field(22)
    fold_type_for_web: int = betterproto.int64_field(23)
    anchor_fold_type_for_web: int = betterproto.int64_field(24)
    client_send_time: int = betterproto.int64_field(25)
    dispatch_strategy: "CommonImDispatchStrategy" = betterproto.enum_field(26)


@dataclass(eq=False, repr=False)
class CommonLiveMessageSei(betterproto.Message):
    unique_id: "CommonLiveMessageId" = betterproto.message_field(1)
    timestamp: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class CommonLiveMessageId(betterproto.Message):
    primary_id: str = betterproto.string_field(1)
    message_scene: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class Text(betterproto.Message):
    """@Text"""

    key: str = betterproto.string_field(1)
    default_pattern: str = betterproto.string_field(2)
    default_format: "TextTextFormat" = betterproto.message_field(3)
    pieces_list: List["TextTextPiece"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TextTextPiece(betterproto.Message):
    type: int = betterproto.int32_field(1)
    format: "TextTextFormat" = betterproto.message_field(2)
    string_value: str = betterproto.string_field(11)
    user_value: "TextTextPieceUser" = betterproto.message_field(
        21, group="textPieceType"
    )
    gift_value: "TextTextPieceGift" = betterproto.message_field(
        22, group="textPieceType"
    )
    pattern_ref_value: "TextTextPiecePatternRef" = betterproto.message_field(24)


@dataclass(eq=False, repr=False)
class TextTextFormat(betterproto.Message):
    color: str = betterproto.string_field(1)
    bold: bool = betterproto.bool_field(2)
    italic: bool = betterproto.bool_field(3)
    weight: int = betterproto.int32_field(4)
    italic_angle: int = betterproto.int32_field(5)
    font_size: int = betterproto.int32_field(6)
    use_heigh_light_color: bool = betterproto.bool_field(7)
    use_remote_clor: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class TextTextPieceGift(betterproto.Message):
    gift_id: int = betterproto.int32_field(1)
    color_id: int = betterproto.int64_field(4)
    """PatternRef nameRef = 2;  ShowType showType = 3; // Enum"""


@dataclass(eq=False, repr=False)
class TextTextPiecePatternRef(betterproto.Message):
    key: str = betterproto.string_field(1)
    default_pattern: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class TextTextPieceUser(betterproto.Message):
    user: "User" = betterproto.message_field(1)
    with_colon: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class Image(betterproto.Message):
    """@Image"""

    url_list: List[str] = betterproto.string_field(1)
    is_animated: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class BadgeStruct(betterproto.Message):
    """@Badge"""

    display_type: "BadgeStructBadgeDisplayType" = betterproto.enum_field(1)
    image: "BadgeStructImageBadge" = betterproto.message_field(20, group="badgeType")
    text: "BadgeStructTextBadge" = betterproto.message_field(21, group="badgeType")
    str: "BadgeStructStringBadge" = betterproto.message_field(22, group="badgeType")
    combine: "BadgeStructCombineBadge" = betterproto.message_field(
        23, group="badgeType"
    )


@dataclass(eq=False, repr=False)
class BadgeStructCombineBadge(betterproto.Message):
    icon: "Image" = betterproto.message_field(2)
    text: "BadgeStructTextBadge" = betterproto.message_field(3)
    str: builtins.str = betterproto.string_field(4)
    profile_card_panel: "BadgeStructProfileCardPanel" = betterproto.message_field(7)
    """repeated PaddingInfo padding = 5;  FontStyle fontStyle = 6;"""

    background: "BadgeStructCombineBadgeBackground" = betterproto.message_field(11)
    background_dark_mode: "BadgeStructCombineBadgeBackground" = (
        betterproto.message_field(12)
    )
    icon_auto_mirrored: bool = betterproto.bool_field(13)
    background_auto_mirrored: bool = betterproto.bool_field(14)
    public_screen_show_style: int = betterproto.int32_field(15)
    personal_card_show_style: int = betterproto.int32_field(16)
    ranklist_online_audience_show_style: int = betterproto.int32_field(17)
    multi_guest_show_style: int = betterproto.int32_field(18)


@dataclass(eq=False, repr=False)
class BadgeStructProfileContent(betterproto.Message):
    use_content: bool = betterproto.bool_field(1)
    icon_list: List["BadgeStructIconConfig"] = betterproto.message_field(2)
    number_config: "BadgeStructNumberConfig" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class BadgeStructProjectionConfig(betterproto.Message):
    use_projection: bool = betterproto.bool_field(1)
    icon: "Image" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BadgeStructNumberConfig(betterproto.Message):
    number: int = betterproto.int64_field(1)
    background: "BadgeStructCombineBadgeBackground" = betterproto.message_field(3)
    """FontStyle fontStyle = 2;"""


@dataclass(eq=False, repr=False)
class BadgeStructProfileCardPanel(betterproto.Message):
    use_new_profile_card_style: bool = betterproto.bool_field(1)
    projection_config: "BadgeStructProjectionConfig" = betterproto.message_field(3)
    """BadgeTextPosition badgeTextPosition = 2; // Enum"""

    profile_content: "BadgeStructProfileContent" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class BadgeStructCombineBadgeBackground(betterproto.Message):
    image: "Image" = betterproto.message_field(1)
    background_color_code: str = betterproto.string_field(2)
    border_color_code: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class BadgeStructImageBadge(betterproto.Message):
    image: "Image" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BadgeStructTextBadge(betterproto.Message):
    default_pattern: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class BadgeStructIconConfig(betterproto.Message):
    icon: "Image" = betterproto.message_field(1)
    background: "BadgeStructCombineBadgeBackground" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BadgeStructStringBadge(betterproto.Message):
    str: builtins.str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class GiftStruct(betterproto.Message):
    """@Gift"""

    image: "Image" = betterproto.message_field(1)
    describe: str = betterproto.string_field(2)
    duration: int = betterproto.int64_field(4)
    id: int = betterproto.int64_field(5)
    for_linkmic: bool = betterproto.bool_field(7)
    combo: bool = betterproto.bool_field(10)
    type: int = betterproto.int32_field(11)
    diamond_count: int = betterproto.int32_field(12)
    is_displayed_on_panel: bool = betterproto.bool_field(13)
    primary_effect_id: int = betterproto.int64_field(14)
    gift_label_icon: "Image" = betterproto.message_field(15)
    name: str = betterproto.string_field(16)
    icon: "Image" = betterproto.message_field(21)
    gold_effect: str = betterproto.string_field(24)
    preview_image: "Image" = betterproto.message_field(47)
    gift_panel_banner: "GiftStructGiftPanelBanner" = betterproto.message_field(48)
    is_broadcast_gift: bool = betterproto.bool_field(49)
    is_effect_befview: bool = betterproto.bool_field(50)
    is_random_gift: bool = betterproto.bool_field(51)
    is_box_gift: bool = betterproto.bool_field(52)
    can_put_in_gift_box: bool = betterproto.bool_field(53)


@dataclass(eq=False, repr=False)
class GiftStructGiftPanelBanner(betterproto.Message):
    """@GiftPanelBanner  proto.webcast.data.GiftStruct"""

    display_text: "Text" = betterproto.message_field(1)
    left_icon: "Image" = betterproto.message_field(2)
    schema_url: str = betterproto.string_field(3)
    bg_color_values_list: List[str] = betterproto.string_field(5)
    banner_lynx_url: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class GiftStructGiftRandomEffectInfo(betterproto.Message):
    """@GiftRandomEffectInfo  proto.webcast.data.GiftStruct"""

    random_gift_panel_banner: "GiftStructRandomGiftPanelBanner" = (
        betterproto.message_field(1)
    )
    effect_ids_list: List[int] = betterproto.int64_field(2)
    host_key: str = betterproto.string_field(3)
    audience_key: str = betterproto.string_field(4)
    random_gift_bubble: "GiftStructRandomGiftBubble" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GiftStructRandomGiftBubble(betterproto.Message):
    """@RandomGiftBubble  proto.webcast.data.GiftStruct"""

    display_text: str = betterproto.string_field(1)
    icon_dynamic_effect: "Image" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GiftStructRandomGiftPanelBanner(betterproto.Message):
    """@RandomGiftPanelBanner  proto.webcast.data.GiftStruct"""

    bg_image: "Image" = betterproto.message_field(1)
    shading_image: "Image" = betterproto.message_field(2)
    target_num: int = betterproto.int64_field(3)
    collect_num: int = betterproto.int64_field(4)
    display_text: str = betterproto.string_field(5)
    left_icon: "Image" = betterproto.message_field(6)
    schema_url: str = betterproto.string_field(7)
    bg_color_values_list: List[str] = betterproto.string_field(8)
    round: int = betterproto.int64_field(9)


@dataclass(eq=False, repr=False)
class User(betterproto.Message):
    """@User"""

    id: int = betterproto.int64_field(1)
    nickname: str = betterproto.string_field(3)
    bio_description: str = betterproto.string_field(5)
    avatar_thumb: "Image" = betterproto.message_field(9)
    avatar_medium: "Image" = betterproto.message_field(10)
    avatar_large: "Image" = betterproto.message_field(11)
    verified: bool = betterproto.bool_field(12)
    status: int = betterproto.int32_field(15)
    create_time: int = betterproto.int64_field(16)
    modify_time: int = betterproto.int64_field(17)
    secret: int = betterproto.int32_field(18)
    share_qrcode_uri: str = betterproto.string_field(19)
    badge_image_list: List["Image"] = betterproto.message_field(21)
    follow_info: "UserFollowInfo" = betterproto.message_field(22)
    pay_grade: "UserPayGrade" = betterproto.message_field(23)
    fans_club: "UserFansClub" = betterproto.message_field(24)
    border: "UserBorder" = betterproto.message_field(25)
    special_id: str = betterproto.string_field(26)
    avatar_border: "Image" = betterproto.message_field(27)
    medal: "Image" = betterproto.message_field(28)
    real_time_icons_list: List["Image"] = betterproto.message_field(29)
    new_real_time_icons_list: List["Image"] = betterproto.message_field(30)
    top_vip_no: int = betterproto.int64_field(31)
    user_attr: "UserUserAttr" = betterproto.message_field(32)
    own_room: "UserOwnRoom" = betterproto.message_field(33)
    pay_score: int = betterproto.int64_field(34)
    ticket_count: int = betterproto.int64_field(35)
    link_mic_stats: "LinkmicStatus" = betterproto.enum_field(37)
    display_id: str = betterproto.string_field(38)
    with_commerce_permission: bool = betterproto.bool_field(39)
    with_fusion_shop_entry: bool = betterproto.bool_field(40)
    webcast_anchor_level: "UserAnchorLevel" = betterproto.message_field(42)
    verified_content: str = betterproto.string_field(43)
    author_stats: "UserAuthorStats" = betterproto.message_field(44)
    top_fans_list: List["User"] = betterproto.message_field(45)
    sec_uid: str = betterproto.string_field(46)
    user_role: int = betterproto.int32_field(47)
    activity_reward: "UserActivityInfo" = betterproto.message_field(49)
    personal_card: "Image" = betterproto.message_field(52)
    authentication_info: "UserAuthenticationInfo" = betterproto.message_field(53)
    media_badge_image_list: List["Image"] = betterproto.message_field(57)
    commerce_webcast_config_ids_list: List[int] = betterproto.int64_field(60)
    border_list: List["UserBorder"] = betterproto.message_field(61)
    combo_badge_info: "UserComboBadgeInfo" = betterproto.message_field(62)
    subscribe_info: "UserSubscribeInfo" = betterproto.message_field(63)
    badge_list: List["BadgeStruct"] = betterproto.message_field(64)
    mint_type_label_list: List[int] = betterproto.int64_field(65)
    fans_club_info: "UserFansClubInfo" = betterproto.message_field(66)
    allow_find_by_contacts: bool = betterproto.bool_field(1002)
    allow_others_download_video: bool = betterproto.bool_field(1003)
    allow_others_download_when_sharing_video: bool = betterproto.bool_field(1004)
    allow_share_show_profile: bool = betterproto.bool_field(1005)
    allow_show_in_gossip: bool = betterproto.bool_field(1006)
    allow_show_my_action: bool = betterproto.bool_field(1007)
    allow_strange_comment: bool = betterproto.bool_field(1008)
    allow_unfollower_comment: bool = betterproto.bool_field(1009)
    allow_use_linkmic: bool = betterproto.bool_field(1010)
    anchor_level: "UserAnchorLevel" = betterproto.message_field(1011)
    avatar_jpg: "Image" = betterproto.message_field(1012)
    bg_img_url: str = betterproto.string_field(1013)
    block_status: int = betterproto.int32_field(1016)
    comment_restrict: int = betterproto.int32_field(1017)
    constellation: str = betterproto.string_field(1018)
    disable_ichat: int = betterproto.int32_field(1019)
    enable_ichat_img: int = betterproto.int64_field(1020)
    exp: int = betterproto.int32_field(1021)
    fan_ticket_count: int = betterproto.int64_field(1022)
    fold_stranger_chat: bool = betterproto.bool_field(1023)
    follow_status: int = betterproto.int64_field(1024)
    ichat_restrict_type: int = betterproto.int32_field(1027)
    id_str: str = betterproto.string_field(1028)
    is_follower: bool = betterproto.bool_field(1029)
    is_following: bool = betterproto.bool_field(1030)
    need_profile_guide: bool = betterproto.bool_field(1031)
    pay_scores: int = betterproto.int64_field(1032)
    push_comment_status: bool = betterproto.bool_field(1033)
    push_digg: bool = betterproto.bool_field(1034)
    push_follow: bool = betterproto.bool_field(1035)
    push_friend_action: bool = betterproto.bool_field(1036)
    push_ichat: bool = betterproto.bool_field(1037)
    push_status: bool = betterproto.bool_field(1038)
    push_video_post: bool = betterproto.bool_field(1039)
    push_video_recommend: bool = betterproto.bool_field(1040)
    stats: "UserUserStats" = betterproto.message_field(1041)
    verified_reason: str = betterproto.string_field(1043)
    with_car_management_permission: bool = betterproto.bool_field(1044)
    upcoming_event_list: List["UserLiveEventInfo"] = betterproto.message_field(1045)
    scm_label: str = betterproto.string_field(1046)
    ecommerce_entrance: "UserEcommerceEntrance" = betterproto.message_field(1047)
    is_block: bool = betterproto.bool_field(1048)


@dataclass(eq=False, repr=False)
class UserLiveEventInfo(betterproto.Message):
    event_id: int = betterproto.int64_field(1)
    start_time: int = betterproto.int64_field(2)
    duration: int = betterproto.int64_field(3)
    title: str = betterproto.string_field(4)
    description: str = betterproto.string_field(5)
    has_subscribed: bool = betterproto.bool_field(6)
    is_paid_event: bool = betterproto.bool_field(7)
    ticket_amount: int = betterproto.int64_field(8)
    pay_method: int = betterproto.int64_field(9)


@dataclass(eq=False, repr=False)
class UserLiveEventInfoWalletPackage(betterproto.Message):
    """@WalletPackage  proto.webcast.data.LiveEventInfo"""

    iap_id: str = betterproto.string_field(1)
    usd_price_show: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class UserActivityInfo(betterproto.Message):
    """@ActivityInfo  proto.webcast.data.User"""

    badge: "Image" = betterproto.message_field(1)
    storytag: "Image" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class UserAnchorLevel(betterproto.Message):
    """@AnchorLevel  proto.webcast.data.User"""

    level: int = betterproto.int64_field(1)
    experience: int = betterproto.int64_field(2)
    lowest_experience_this_level: int = betterproto.int64_field(3)
    highest_experience_this_level: int = betterproto.int64_field(4)
    task_start_experience: int = betterproto.int64_field(5)
    task_start_time: int = betterproto.int64_field(6)
    task_decrease_experience: int = betterproto.int64_field(7)
    task_target_experience: int = betterproto.int64_field(8)
    task_end_time: int = betterproto.int64_field(9)
    profile_dialog_bg: "Image" = betterproto.message_field(10)
    profile_dialog_bg_back: "Image" = betterproto.message_field(11)
    stage_level: "Image" = betterproto.message_field(12)
    small_icon: "Image" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class UserAuthenticationInfo(betterproto.Message):
    """@AuthenticationInfo  proto.webcast.data.User"""

    custom_verify: str = betterproto.string_field(1)
    enterprise_verify_reason: str = betterproto.string_field(2)
    authentication_badge: "Image" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class UserAuthorStats(betterproto.Message):
    """@AuthorStats  proto.webcast.data.User"""

    video_total_count: int = betterproto.int64_field(1)
    video_total_play_count: int = betterproto.int64_field(2)
    video_total_share_count: int = betterproto.int64_field(3)
    video_total_series_count: int = betterproto.int64_field(4)
    variety_show_play_count: int = betterproto.int64_field(5)
    video_total_favorite_count: int = betterproto.int64_field(6)


@dataclass(eq=False, repr=False)
class UserBorder(betterproto.Message):
    """@Border  proto.webcast.data.User"""

    icon: "Image" = betterproto.message_field(1)
    level: int = betterproto.int64_field(2)
    source: str = betterproto.string_field(3)
    profile_decoration_ribbon: "Image" = betterproto.message_field(4)
    avatar_background_color: str = betterproto.string_field(7)
    avatar_background_border_color: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class UserComboBadgeInfo(betterproto.Message):
    """@ComboBadgeInfo  proto.webcast.data.User"""

    icon: "Image" = betterproto.message_field(1)
    combo_count: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class UserEcommerceEntrance(betterproto.Message):
    """@EcommerceEntrance  proto.webcast.data.User"""

    entrance_type: "UserEcommerceEntranceEntranceType" = betterproto.enum_field(1)
    creator_type: "UserEcommerceEntranceCreatorType" = betterproto.enum_field(2)
    schema: str = betterproto.string_field(3)
    shop_entrance_info: "UserEcommerceEntranceShopEntranceInfo" = (
        betterproto.message_field(4)
    )
    showcase_entrance_info: "UserEcommerceEntranceShowcaseEntranceInfo" = (
        betterproto.message_field(5)
    )


@dataclass(eq=False, repr=False)
class UserEcommerceEntranceShopEntranceInfo(betterproto.Message):
    """@ShopEntranceInfo  proto.webcast.data.User.EcommerceEntrance"""

    shop_id: str = betterproto.string_field(1)
    shop_name: str = betterproto.string_field(2)
    shop_rating: str = betterproto.string_field(3)
    store_label: "UserEcommerceEntranceShopEntranceInfoStoreLabel" = (
        betterproto.message_field(4)
    )
    format_sold_count: str = betterproto.string_field(5)
    sold_count: int = betterproto.int64_field(6)
    exp_rate_percentile: int = betterproto.int32_field(7)
    exp_rate_top_display: str = betterproto.string_field(8)
    rate_display_style: int = betterproto.int32_field(9)
    show_rate_not_applicable: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class UserEcommerceEntranceShopEntranceInfoStoreLabel(betterproto.Message):
    """
    @StoreLabel  proto.webcast.data.User.EcommerceEntrance.ShopEntranceInfo
    """

    official_label: "UserEcommerceEntranceShopEntranceInfoStoreLabelStoreOfficialLabel" = betterproto.message_field(
        1
    )
    is_bytemall: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class UserEcommerceEntranceShopEntranceInfoStoreLabelStoreOfficialLabel(
    betterproto.Message
):
    """
    @StoreOfficialLabel
    proto.webcast.data.User.EcommerceEntrance.ShopEntranceInfo.StoreLabel
    """

    label_image_light: "UserEcommerceEntranceShopEntranceInfoStoreLabelStoreOfficialLabelShopLabelImage" = betterproto.message_field(
        1
    )
    label_image_dark: "UserEcommerceEntranceShopEntranceInfoStoreLabelStoreOfficialLabelShopLabelImage" = betterproto.message_field(
        2
    )
    label_type: int = betterproto.int64_field(3)
    label_type_str: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class UserEcommerceEntranceShopEntranceInfoStoreLabelStoreOfficialLabelShopLabelImage(
    betterproto.Message
):
    """
    @ShopLabelImage  proto.webcast.data.User.EcommerceEntrance.ShopEntranceInfo
    .StoreLabel.StoreOfficialLabel
    """

    height: int = betterproto.int32_field(1)
    width: int = betterproto.int32_field(2)
    minetype: str = betterproto.string_field(3)
    thumb_uri: str = betterproto.string_field(4)
    thumb_uri_list: List[str] = betterproto.string_field(5)
    uri: str = betterproto.string_field(6)
    url_list: List[str] = betterproto.string_field(7)
    color: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class UserEcommerceEntranceShowcaseEntranceInfo(betterproto.Message):
    """@ShowcaseEntranceInfo  proto.webcast.data.User.EcommerceEntrance"""

    format_sold_count: str = betterproto.string_field(1)
    sold_count: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class UserFansClub(betterproto.Message):
    """@FansClub  proto.webcast.data.User"""

    data: "UserFansClubFansClubData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UserFansClubFansClubData(betterproto.Message):
    """@FansClubData  proto.webcast.data.User.FansClub"""

    club_name: str = betterproto.string_field(1)
    level: int = betterproto.int32_field(2)
    user_fans_club_status: "UserFansClubFansClubDataUserFansClubStatus" = (
        betterproto.enum_field(3)
    )
    available_gift_ids_list: List[int] = betterproto.int64_field(5)
    anchor_id: int = betterproto.int64_field(6)


@dataclass(eq=False, repr=False)
class UserFansClubInfo(betterproto.Message):
    """@FansClubInfo  proto.webcast.data.User"""

    is_sleeping: bool = betterproto.bool_field(1)
    fans_level: int = betterproto.int64_field(2)
    fans_score: int = betterproto.int64_field(3)
    badge: "Image" = betterproto.message_field(4)
    fans_count: int = betterproto.int64_field(5)


@dataclass(eq=False, repr=False)
class UserFollowInfo(betterproto.Message):
    """@FollowInfo  proto.webcast.data.User"""

    following_count: int = betterproto.int64_field(1)
    follower_count: int = betterproto.int64_field(2)
    follow_status: int = betterproto.int64_field(3)
    push_status: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class UserOwnRoom(betterproto.Message):
    """@OwnRoom  proto.webcast.data.User"""

    room_ids_list: List[int] = betterproto.int64_field(1)
    room_ids_str_list: List[str] = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class UserPayGrade(betterproto.Message):
    """@PayGrade  proto.webcast.data.User"""

    diamond_icon: "Image" = betterproto.message_field(2)
    name: str = betterproto.string_field(3)
    icon: "Image" = betterproto.message_field(4)
    next_name: str = betterproto.string_field(5)
    level: int = betterproto.int64_field(6)
    next_icon: "Image" = betterproto.message_field(7)
    grade_describe: str = betterproto.string_field(13)
    grade_icon_list: List["UserPayGradeGradeIcon"] = betterproto.message_field(14)
    screen_chat_type: int = betterproto.int64_field(15)
    im_icon: "Image" = betterproto.message_field(16)
    im_icon_with_level: "Image" = betterproto.message_field(17)
    live_icon: "Image" = betterproto.message_field(18)
    new_im_icon_with_level: "Image" = betterproto.message_field(19)
    new_live_icon: "Image" = betterproto.message_field(20)
    upgrade_need_consume: int = betterproto.int64_field(21)
    next_privileges: str = betterproto.string_field(22)
    background: "Image" = betterproto.message_field(23)
    background_back: "Image" = betterproto.message_field(24)
    score: int = betterproto.int64_field(25)
    grade_banner: str = betterproto.string_field(1001)
    profile_dialog_bg: "Image" = betterproto.message_field(1002)
    profile_dialog_bg_back: "Image" = betterproto.message_field(1003)


@dataclass(eq=False, repr=False)
class UserPayGradeGradeIcon(betterproto.Message):
    """@GradeIcon  proto.webcast.data.User.PayGrade"""

    icon: "Image" = betterproto.message_field(1)
    icon_diamond: int = betterproto.int64_field(2)
    level: int = betterproto.int64_field(3)
    level_str: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class UserSubscribeBadge(betterproto.Message):
    """@SubscribeBadge  proto.webcast.data.User"""

    origin_img: "Image" = betterproto.message_field(3)
    preview_img: "Image" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class UserSubscribeInfo(betterproto.Message):
    """@SubscribeInfo  proto.webcast.data.User"""

    qualification: bool = betterproto.bool_field(1)
    is_subscribe: bool = betterproto.bool_field(2)
    badge: "UserSubscribeBadge" = betterproto.message_field(3)
    enable_subscription: bool = betterproto.bool_field(4)
    subscriber_count: int = betterproto.int64_field(5)
    is_in_grace_period: bool = betterproto.bool_field(6)
    is_subscribed_to_anchor: bool = betterproto.bool_field(7)
    user_gift_sub_auth: bool = betterproto.bool_field(9)
    anchor_gift_sub_auth: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class UserUserAttr(betterproto.Message):
    """@UserAttr  proto.webcast.data.User"""

    is_muted: bool = betterproto.bool_field(1)
    is_admin: bool = betterproto.bool_field(2)
    is_super_admin: bool = betterproto.bool_field(3)
    mute_duration: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class UserUserStats(betterproto.Message):
    """@UserStats  proto.webcast.data.User"""

    id: int = betterproto.int64_field(1)
    id_str: str = betterproto.string_field(2)
    following_count: int = betterproto.int64_field(3)
    follower_count: int = betterproto.int64_field(4)
    record_count: int = betterproto.int64_field(5)
    total_duration: int = betterproto.int64_field(6)
    daily_fan_ticket_count: int = betterproto.int64_field(7)
    daily_income: int = betterproto.int64_field(8)
    item_count: int = betterproto.int64_field(9)
    favorite_item_count: int = betterproto.int64_field(10)
    diamond_consumed_count: int = betterproto.int64_field(12)
    tuwen_item_count: int = betterproto.int64_field(13)


@dataclass(eq=False, repr=False)
class Emote(betterproto.Message):
    """@Emote"""

    emote_id: str = betterproto.string_field(1)
    image: "Image" = betterproto.message_field(2)
    audit_status: "AuditStatus" = betterproto.enum_field(3)
    uuid: str = betterproto.string_field(4)
    emote_type: "EmoteType" = betterproto.enum_field(5)
    content_source: "ContentSource" = betterproto.enum_field(6)
    emote_private_type: "EmotePrivateType" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class PunishEventInfo(betterproto.Message):
    """@PunishEventInfo"""

    punish_type: str = betterproto.string_field(1)
    punish_reason: str = betterproto.string_field(2)
    punish_id: str = betterproto.string_field(3)
    violation_uid: int = betterproto.int64_field(4)
    punish_type_id: int = betterproto.int32_field(5)
    duration: int = betterproto.int64_field(6)


@dataclass(eq=False, repr=False)
class MsgFilter(betterproto.Message):
    """@MsgFilter"""

    is_gifter: bool = betterproto.bool_field(1)
    is_subscribed_to_anchor: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class UserIdentity(betterproto.Message):
    """@UserIdentity  proto.webcast.data"""

    is_gift_giver_of_anchor: bool = betterproto.bool_field(1)
    is_subscriber_of_anchor: bool = betterproto.bool_field(2)
    is_mutual_following_with_anchor: bool = betterproto.bool_field(3)
    is_follower_of_anchor: bool = betterproto.bool_field(4)
    is_moderator_of_anchor: bool = betterproto.bool_field(5)
    is_anchor: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class Goal(betterproto.Message):
    """@Goal  proto.webcast.data"""

    id: int = betterproto.int64_field(1)
    description: str = betterproto.string_field(5)
    """
    TextType type = 2; // Enum  GoalStatus status = 3; // Enum  repeated
    SubGoal subGoalsList = 4;
    """

    audit_status: int = betterproto.int32_field(6)
    start_time: int = betterproto.int64_field(8)
    """CycleType cycleType = 7; // Enum"""

    expire_time: int = betterproto.int64_field(9)
    real_finish_time: int = betterproto.int64_field(10)
    contributors_list: List["GoalGoalContributor"] = betterproto.message_field(11)
    contributors_length: int = betterproto.int32_field(12)
    id_str: str = betterproto.string_field(13)
    audit_description: str = betterproto.string_field(14)
    stats: "GoalGoalStats" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GoalGoalStats(betterproto.Message):
    total_coins: int = betterproto.int64_field(1)
    total_contributor: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class GoalGoalContributor(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    avatar: "Image" = betterproto.message_field(2)
    display_id: str = betterproto.string_field(3)
    score: int = betterproto.int64_field(4)
    user_id_str: str = betterproto.string_field(5)
    in_room: bool = betterproto.bool_field(6)
    is_friend: bool = betterproto.bool_field(7)
    badge_list: List["BadgeStruct"] = betterproto.message_field(8)
    follow_by_owner: bool = betterproto.bool_field(9)
    is_fist_contribute: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class Indicator(betterproto.Message):
    """@Indicator  proto.webcast.data"""

    key: str = betterproto.string_field(1)
    op: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class Ranking(betterproto.Message):
    type: str = betterproto.string_field(1)
    label: str = betterproto.string_field(2)
    color: "TikTokColor" = betterproto.message_field(3)
    details: List["ValueLabel"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TikTokColor(betterproto.Message):
    color: str = betterproto.string_field(1)
    id: int = betterproto.uint64_field(4)
    data1: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ValueLabel(betterproto.Message):
    data: int = betterproto.uint32_field(1)
    label: str = betterproto.string_field(2)
    label2: str = betterproto.string_field(3)
    label3: str = betterproto.string_field(11)


@dataclass(eq=False, repr=False)
class MessageDetails(betterproto.Message):
    data1: int = betterproto.uint32_field(1)
    color: "TikTokColor" = betterproto.message_field(2)
    category: str = betterproto.string_field(11)
    user: "UserContainer" = betterproto.message_field(21)


@dataclass(eq=False, repr=False)
class UserContainer(betterproto.Message):
    user: "User" = betterproto.message_field(1)
    data1: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DataContainer(betterproto.Message):
    """Container for uint-Data"""

    data1: int = betterproto.uint64_field(1)
    data2: int = betterproto.uint32_field(2)
    data3: int = betterproto.uint32_field(3)
    data4: int = betterproto.uint32_field(4)
    data5: int = betterproto.uint32_field(5)
    data6: int = betterproto.uint32_field(6)
    data7: int = betterproto.uint32_field(7)
    data8: int = betterproto.uint32_field(8)
    data9: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TimeStampContainer(betterproto.Message):
    timestamp1: int = betterproto.uint64_field(1)
    timestamp2: int = betterproto.uint64_field(2)
    timestamp3: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class MemberMessageData(betterproto.Message):
    type: str = betterproto.string_field(1)
    label: str = betterproto.string_field(2)
    color: "TikTokColor" = betterproto.message_field(3)
    details: List["MessageDetails"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class LinkMicArmiesItems(betterproto.Message):
    host_user_id: int = betterproto.uint64_field(1)
    battle_groups: List[
        "LinkMicArmiesItemsLinkMicArmiesGroup"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class LinkMicArmiesItemsLinkMicArmiesGroup(betterproto.Message):
    users: List["User"] = betterproto.message_field(1)
    points: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PollStartContent(betterproto.Message):
    start_time: int = betterproto.int64_field(1)
    end_time: int = betterproto.int64_field(2)
    option_list: List["PollOptionInfo"] = betterproto.message_field(3)
    title: str = betterproto.string_field(4)
    operator: "User" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class PollEndContent(betterproto.Message):
    end_type: int = betterproto.int32_field(1)
    option_list: List["PollOptionInfo"] = betterproto.message_field(2)
    operator: "User" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PollOptionInfo(betterproto.Message):
    votes: int = betterproto.int32_field(1)
    display_content: str = betterproto.string_field(2)
    option_idx: int = betterproto.int32_field(3)
    vote_user_list: List["VoteUser"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class VoteUser(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    nick_name: str = betterproto.string_field(2)
    avatar_thumb: "Image" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PollUpdateVotesContent(betterproto.Message):
    option_list: List["PollOptionInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class UserFanTicket(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    fan_ticket: int = betterproto.int64_field(2)
    match_total_score: int = betterproto.int64_field(3)
    match_rank: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class FanTicketRoomNoticeContent(betterproto.Message):
    user_fan_ticket_list: List["UserFanTicket"] = betterproto.message_field(1)
    total_link_mic_fan_ticket: int = betterproto.int64_field(2)
    match_id: int = betterproto.int64_field(3)
    event_time: int = betterproto.int64_field(4)
    fan_ticket_icon_url: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class WebcastPushFrame(betterproto.Message):
    """
    @WebcastPushFrame  Response from TikTokServer. Container for Messages
    """

    seq_id: int = betterproto.uint64_field(1)
    log_id: int = betterproto.uint64_field(2)
    service: int = betterproto.uint64_field(3)
    method: int = betterproto.uint64_field(4)
    headers: Dict[str, str] = betterproto.map_field(
        5, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )
    payload_encoding: str = betterproto.string_field(6)
    payload_type: str = betterproto.string_field(7)
    payload: bytes = betterproto.bytes_field(8)


@dataclass(eq=False, repr=False)
class WebcastWebsocketAck(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    type: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class WebcastResponse(betterproto.Message):
    """@WebcastResponse  Response from TikTokServer. Container for Messages"""

    messages: List["WebcastResponseMessage"] = betterproto.message_field(1)
    cursor: str = betterproto.string_field(2)
    fetch_interval: int = betterproto.int64_field(3)
    now: int = betterproto.int64_field(4)
    internal_ext: str = betterproto.string_field(5)
    fetch_type: int = betterproto.int32_field(6)
    route_params_map: Dict[str, str] = betterproto.map_field(
        7, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )
    heart_beat_duration: int = betterproto.int64_field(8)
    needs_ack: bool = betterproto.bool_field(9)
    push_server: str = betterproto.string_field(10)
    is_first: bool = betterproto.bool_field(11)
    history_comment_cursor: str = betterproto.string_field(12)
    history_no_more: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class WebcastResponseMessage(betterproto.Message):
    """Server-Message. Binary will deserialize into specific message"""

    method: str = betterproto.string_field(1)
    payload: bytes = betterproto.bytes_field(2)
    msg_id: int = betterproto.int64_field(3)
    msg_type: int = betterproto.int32_field(4)
    offset: int = betterproto.int64_field(5)
    is_history: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class WebcastGiftMessage(betterproto.Message):
    """@GiftMessage"""

    common: "Common" = betterproto.message_field(1)
    gift_id: int = betterproto.int64_field(2)
    fan_ticket_count: int = betterproto.int64_field(3)
    group_count: int = betterproto.int32_field(4)
    repeat_count: int = betterproto.int32_field(5)
    combo_count: int = betterproto.int32_field(6)
    user: "User" = betterproto.message_field(7)
    to_user: "User" = betterproto.message_field(8)
    repeat_end: int = betterproto.int32_field(9)
    group_id: int = betterproto.int64_field(11)
    income_taskgifts: int = betterproto.int64_field(12)
    room_fan_ticket_count: int = betterproto.int64_field(13)
    gift: "GiftStruct" = betterproto.message_field(15)
    log_id: str = betterproto.string_field(16)
    send_type: int = betterproto.int64_field(17)
    monitor_extra: str = betterproto.string_field(22)
    color_id: int = betterproto.int64_field(24)
    is_first_sent: bool = betterproto.bool_field(25)
    order_id: str = betterproto.string_field(28)
    user_identity: "UserIdentity" = betterproto.message_field(32)


@dataclass(eq=False, repr=False)
class WebcastGiftMessageGiftImPriority(betterproto.Message):
    queue_sizes_list: List[int] = betterproto.int64_field(1)
    self_queue_priority: int = betterproto.int64_field(2)
    priority: int = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class WebcastGiftMessagePublicAreaCommon(betterproto.Message):
    user_label: "Image" = betterproto.message_field(1)
    user_consume_in_room: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class RoomMessage(betterproto.Message):
    """@RoomMessage"""

    common: "Common" = betterproto.message_field(1)
    content: str = betterproto.string_field(2)
    supprot_landscape: bool = betterproto.bool_field(3)
    source: int = betterproto.int64_field(4)
    icon: "Image" = betterproto.message_field(5)
    scene: str = betterproto.string_field(6)
    is_welcome: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class WebcastRoomMessage(betterproto.Message):
    """@WebcastRoomMessage"""

    common: "Common" = betterproto.message_field(1)
    content: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class WebcastBarrageMessage(betterproto.Message):
    """@WebcastBarrageMessage"""

    common: "Common" = betterproto.message_field(1)
    event: "WebcastBarrageMessageBarrageEvent" = betterproto.message_field(2)
    msg_type: "WebcastBarrageMessageBarrageType" = betterproto.enum_field(3)
    icon: "Image" = betterproto.message_field(4)
    content: "Text" = betterproto.message_field(5)
    duration: int = betterproto.int32_field(6)
    background: "Image" = betterproto.message_field(7)
    right_icon: "Image" = betterproto.message_field(8)
    user_grade_param: "WebcastBarrageMessageBarrageTypeUserGradeParam" = (
        betterproto.message_field(100)
    )
    fans_level_param: "WebcastBarrageMessageBarrageTypeFansLevelParam" = (
        betterproto.message_field(101)
    )
    subscribe_gift_param: "WebcastBarrageMessageBarrageTypeSubscribeGiftParam" = (
        betterproto.message_field(102)
    )


@dataclass(eq=False, repr=False)
class WebcastBarrageMessageBarrageTypeUserGradeParam(betterproto.Message):
    current_grade: int = betterproto.int32_field(1)
    display_config: int = betterproto.int32_field(2)
    user_id: str = betterproto.string_field(3)
    user: "User" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WebcastBarrageMessageBarrageTypeFansLevelParam(betterproto.Message):
    current_grade: int = betterproto.int32_field(1)
    display_config: int = betterproto.int32_field(2)
    user: "User" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WebcastBarrageMessageBarrageTypeSubscribeGiftParam(betterproto.Message):
    gift_sub_count: int = betterproto.int64_field(1)
    show_gift_sub_count: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class WebcastBarrageMessageBarrageEvent(betterproto.Message):
    event_name: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class WebcastCaptionMessage(betterproto.Message):
    """@WebcastCaptionMessage  Closed Captioning for Video"""

    common: "Common" = betterproto.message_field(1)
    time_stamp: int = betterproto.uint64_field(2)
    caption_data: "WebcastCaptionMessageCaptionData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WebcastCaptionMessageCaptionData(betterproto.Message):
    language: str = betterproto.string_field(1)
    text: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class WebcastChatMessage(betterproto.Message):
    """Comment sent by User @WebcastChatMessage"""

    common: "Common" = betterproto.message_field(1)
    user: "User" = betterproto.message_field(2)
    content: str = betterproto.string_field(3)
    visible_to_sender: bool = betterproto.bool_field(4)
    background_image: "Image" = betterproto.message_field(5)
    full_screen_text_color: str = betterproto.string_field(6)
    background_image_v2: "Image" = betterproto.message_field(7)
    gift_image: "Image" = betterproto.message_field(10)
    input_type: int = betterproto.int32_field(11)
    at_user: "User" = betterproto.message_field(12)
    emotes_list: List["WebcastChatMessageEmoteWithIndex"] = betterproto.message_field(
        13
    )
    content_language: str = betterproto.string_field(14)
    quick_chat_scene: int = betterproto.int32_field(16)
    community_flagged_status: int = betterproto.int32_field(17)
    user_identity: "UserIdentity" = betterproto.message_field(18)
    comment_quality_scores: Dict[int, str] = betterproto.map_field(
        19, betterproto.TYPE_INT32, betterproto.TYPE_STRING
    )


@dataclass(eq=False, repr=False)
class WebcastChatMessageEmoteWithIndex(betterproto.Message):
    """@EmoteWithIndex  proto.webcast.im.ChatMessage"""

    index: int = betterproto.int64_field(1)
    emote: "Emote" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WebcastControlMessage(betterproto.Message):
    """
    System-Control Message from Room (e.g. Host ended Stream)
    @WebcastControlMessage
    """

    common: "Common" = betterproto.message_field(1)
    action: "ControlAction" = betterproto.enum_field(2)
    tips: str = betterproto.string_field(3)
    extra: "WebcastControlMessageExtra" = betterproto.message_field(4)
    perception_audience_text: "Text" = betterproto.message_field(6)
    """PerceptionDialogInfo perceptionDialog = 5;"""

    punish_info: "PunishEventInfo" = betterproto.message_field(7)
    float_text: "Text" = betterproto.message_field(8)
    float_style: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class WebcastControlMessageExtra(betterproto.Message):
    """@Extra  proto.webcast.im.ControlMessage"""

    ban_info_url: str = betterproto.string_field(1)
    reason_no: int = betterproto.int64_field(2)
    title: "Text" = betterproto.message_field(3)
    violation_reason: "Text" = betterproto.message_field(4)
    content: "Text" = betterproto.message_field(5)
    got_it_button: "Text" = betterproto.message_field(6)
    ban_detail_button: "Text" = betterproto.message_field(7)
    source: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class WebcastEmoteChatMessage(betterproto.Message):
    """Emote sent by user @WebcastEmoteChatMessage"""

    common: "Common" = betterproto.message_field(1)
    user: "User" = betterproto.message_field(2)
    emote_list: List["Emote"] = betterproto.message_field(3)
    msg_filter: "MsgFilter" = betterproto.message_field(4)
    user_identity: "UserIdentity" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class WebcastEnvelopeMessage(betterproto.Message):
    """@WebcastEnvelopeMessage"""

    common: "Common" = betterproto.message_field(1)
    envelope_info: "WebcastEnvelopeMessageEnvelopeInfo" = betterproto.message_field(2)
    display: int = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class WebcastEnvelopeMessageEnvelopeInfo(betterproto.Message):
    """@EnvelopeInfo  proto.webcast.im.EnvelopeMessage"""

    envelope_id: str = betterproto.string_field(1)
    business_type: int = betterproto.int64_field(2)
    envelope_idc: str = betterproto.string_field(3)
    send_user_name: str = betterproto.string_field(4)
    diamond_count: int = betterproto.int32_field(5)
    people_count: int = betterproto.int32_field(6)
    unpack_at: int = betterproto.int32_field(7)
    send_user_id: str = betterproto.string_field(8)
    send_user_avatar: "Image" = betterproto.message_field(9)
    create_at: str = betterproto.string_field(10)
    room_id: str = betterproto.string_field(11)
    follow_show_status: int = betterproto.int64_field(12)
    skin_id: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class WebcastGoalUpdateMessage(betterproto.Message):
    """@WebcastGoalUpdateMessage"""

    common: "Common" = betterproto.message_field(1)
    indicator: "Indicator" = betterproto.message_field(2)
    goal: "Goal" = betterproto.message_field(3)
    contributor_id: int = betterproto.int64_field(4)
    contributor_avatar: "Image" = betterproto.message_field(5)
    contributor_display_id: str = betterproto.string_field(6)
    contribute_count: int = betterproto.int64_field(9)
    """SubGoal contributeSubgoal = 7;"""

    contribute_score: int = betterproto.int64_field(10)
    gift_repeat_count: int = betterproto.int64_field(11)
    contributor_id_str: str = betterproto.string_field(12)
    pin: bool = betterproto.bool_field(13)
    unpin: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class WebcastImDeleteMessage(betterproto.Message):
    """Message related to Chat-moderation? @WebcastImDeleteMessage"""

    common: "Common" = betterproto.message_field(1)
    delete_msg_ids_list: List[int] = betterproto.int64_field(2)
    delete_user_ids_list: List[int] = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class WebcastInRoomBannerMessage(betterproto.Message):
    """@WebcastInRoomBannerMessage"""

    header: "Common" = betterproto.message_field(1)
    json: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class WebcastLikeMessage(betterproto.Message):
    """
    User sent one or multiple likes to Stream. Maxes at 15 likes per message
    @WebcastLikeMessage
    """

    common: "Common" = betterproto.message_field(1)
    count: int = betterproto.int32_field(2)
    total: int = betterproto.int32_field(3)
    user: "User" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class WebcastRoomUserSeqMessage(betterproto.Message):
    """
    Status of Room (ViewerCount + Top Viewers) @WebcastRoomUserSeqMessage
    """

    common: "Common" = betterproto.message_field(1)
    ranks_list: List[
        "WebcastRoomUserSeqMessageContributor"
    ] = betterproto.message_field(2)
    total: int = betterproto.int64_field(3)
    pop_str: str = betterproto.string_field(4)
    seats_list: List[
        "WebcastRoomUserSeqMessageContributor"
    ] = betterproto.message_field(5)
    popularity: int = betterproto.int64_field(6)
    total_user: int = betterproto.int32_field(7)
    anonymous: int = betterproto.int64_field(8)


@dataclass(eq=False, repr=False)
class WebcastRoomUserSeqMessageContributor(betterproto.Message):
    """@Contributor"""

    score: int = betterproto.int32_field(1)
    user: "User" = betterproto.message_field(2)
    rank: int = betterproto.int32_field(3)
    delta: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class WebcastSocialMessage(betterproto.Message):
    """
    Sent for a variety of events, including Follow & Share
    @WebcastSocialMessage
    """

    common: "Common" = betterproto.message_field(1)
    user: "User" = betterproto.message_field(2)
    share_type: int = betterproto.int64_field(3)
    action: int = betterproto.int64_field(4)
    share_target: str = betterproto.string_field(5)
    follow_count: int = betterproto.int32_field(6)
    share_display_style: int = betterproto.int64_field(7)
    share_count: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class WebcastSubNotifyMessage(betterproto.Message):
    """@WebcastSubNotifyMessage"""

    common: "Common" = betterproto.message_field(1)
    user: "User" = betterproto.message_field(2)
    sub_month: int = betterproto.int64_field(4)
    """ExhibitionType exhibitionType = 3; // Enum"""

    subscribe_type: "SubscribeType" = betterproto.enum_field(5)
    old_subscribe_status: "OldSubscribeStatus" = betterproto.enum_field(6)
    subscribing_status: "SubscribingStatus" = betterproto.enum_field(8)
    is_send: bool = betterproto.bool_field(9)
    is_custom: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class WebcastRankUpdateMessage(betterproto.Message):
    """@WebcastRankUpdateMessage"""

    common: "Common" = betterproto.message_field(1)
    updates_list: List[
        "WebcastRankUpdateMessageRankUpdate"
    ] = betterproto.message_field(2)
    group_type: int = betterproto.int64_field(3)
    priority: int = betterproto.int64_field(5)
    tabs_list: List["WebcastRankUpdateMessageRankTabInfo"] = betterproto.message_field(
        6
    )
    is_animation_loop_play: bool = betterproto.bool_field(7)
    animation_loop_for_off: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class WebcastRankUpdateMessageRankTabInfo(betterproto.Message):
    rank_type: int = betterproto.int64_field(1)
    title: str = betterproto.string_field(2)
    title_text: "Text" = betterproto.message_field(3)
    list_lynx_type: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class WebcastRankUpdateMessageRankUpdate(betterproto.Message):
    """@RankUpdate  proto.webcast.im.RankUpdateMessage"""

    rank_type: int = betterproto.int64_field(1)
    owner_rank: int = betterproto.int64_field(2)
    default_content: "Text" = betterproto.message_field(3)
    show_entrance_animation: bool = betterproto.bool_field(5)
    countdown: int = betterproto.int64_field(6)
    related_tab_rank_type: int = betterproto.int64_field(8)
    request_first_show_type: int = betterproto.int64_field(9)
    supported_version: int = betterproto.int64_field(10)
    owneronrank: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class WebcastMemberMessage(betterproto.Message):
    """
    Sent for a variety of events, including Join & Subscribe
    @WebcastMemberMessage
    """

    common: "Common" = betterproto.message_field(1)
    user: "User" = betterproto.message_field(2)
    member_count: int = betterproto.int32_field(3)
    operator: "User" = betterproto.message_field(4)
    is_set_to_admin: bool = betterproto.bool_field(5)
    is_top_user: bool = betterproto.bool_field(6)
    rank_score: int = betterproto.int64_field(7)
    top_user_no: int = betterproto.int64_field(8)
    enter_type: int = betterproto.int64_field(9)
    action: "MemberMessageAction" = betterproto.enum_field(10)
    action_description: str = betterproto.string_field(11)
    user_id: int = betterproto.int64_field(12)
    effect_config: "WebcastMemberMessageEffectConfig" = betterproto.message_field(13)
    pop_str: str = betterproto.string_field(14)
    enter_effect_config: "WebcastMemberMessageEffectConfig" = betterproto.message_field(
        15
    )
    background_image: "Image" = betterproto.message_field(16)
    background_image_v2: "Image" = betterproto.message_field(17)
    anchor_display_text: "Text" = betterproto.message_field(18)
    client_enter_source: str = betterproto.string_field(19)
    client_enter_type: str = betterproto.string_field(20)
    client_live_reason: str = betterproto.string_field(21)
    action_duration: int = betterproto.int64_field(22)
    user_share_type: str = betterproto.string_field(23)


@dataclass(eq=False, repr=False)
class WebcastMemberMessageEffectConfig(betterproto.Message):
    """@EffectConfig  proto.webcast.im.MemberMessage"""

    type: int = betterproto.int64_field(1)
    icon: "Image" = betterproto.message_field(2)
    avatar_pos: int = betterproto.int64_field(3)
    text: "Text" = betterproto.message_field(4)
    text_icon: "Image" = betterproto.message_field(5)
    stay_time: int = betterproto.int32_field(6)
    anim_asset_id: int = betterproto.int64_field(7)
    badge: "Image" = betterproto.message_field(8)
    flex_setting_array_list: List[int] = betterproto.int64_field(9)


@dataclass(eq=False, repr=False)
class WebcastPollMessage(betterproto.Message):
    """--- HandMade -- @WebcastPollMessage"""

    common: "Common" = betterproto.message_field(1)
    message_type: int = betterproto.int32_field(2)
    poll_id: int = betterproto.int64_field(3)
    start_content: "PollStartContent" = betterproto.message_field(4)
    end_content: "PollEndContent" = betterproto.message_field(5)
    update_content: "PollUpdateVotesContent" = betterproto.message_field(6)
    poll_kind: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class WebcastQuestionNewMessage(betterproto.Message):
    """@WebcastQuestionNewMessage"""

    common: "Common" = betterproto.message_field(1)
    details: "WebcastQuestionNewMessageQuestionDetails" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WebcastQuestionNewMessageQuestionDetails(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    text: str = betterproto.string_field(2)
    time_stamp: int = betterproto.uint64_field(4)
    user: "User" = betterproto.message_field(5)
    data1: int = betterproto.uint32_field(20)


@dataclass(eq=False, repr=False)
class WebcastRankTextMessage(betterproto.Message):
    """@WebcastRankTextMessage"""

    common: "Common" = betterproto.message_field(1)
    scene: int = betterproto.int32_field(2)
    owner_idx_before_update: int = betterproto.int64_field(3)
    owner_idx_after_update: int = betterproto.int64_field(4)
    self_get_badge_msg: "Text" = betterproto.message_field(5)
    other_get_badge_msg: "Text" = betterproto.message_field(6)
    cur_user_id: int = betterproto.int64_field(7)


@dataclass(eq=False, repr=False)
class WebcastHourlyRankMessage(betterproto.Message):
    """@WebcastHourlyRankMessage"""

    common: "Common" = betterproto.message_field(1)
    data: "WebcastHourlyRankMessageRankContainer" = betterproto.message_field(2)
    data2: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WebcastHourlyRankMessageRankContainer(betterproto.Message):
    data1: int = betterproto.uint32_field(1)
    rankingdata: "WebcastHourlyRankMessageRankContainerRankingData" = (
        betterproto.message_field(2)
    )
    data2: int = betterproto.uint32_field(3)
    rankings: "Ranking" = betterproto.message_field(4)
    rankingdata2: "WebcastHourlyRankMessageRankContainerRankingData2" = (
        betterproto.message_field(5)
    )
    data3: int = betterproto.uint32_field(6)
    data4: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WebcastHourlyRankMessageRankContainerRankingData(betterproto.Message):
    data1: int = betterproto.uint32_field(1)
    rankdata: "Ranking" = betterproto.message_field(2)
    data2: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class WebcastHourlyRankMessageRankContainerRankingData2(betterproto.Message):
    data1: int = betterproto.uint32_field(1)
    data2: int = betterproto.uint32_field(2)
    rankdata: "Ranking" = betterproto.message_field(3)
    data3: str = betterproto.string_field(4)
    data4: int = betterproto.uint32_field(5)
    data5: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class WebcastLinkMicArmies(betterproto.Message):
    """@WebcastLinkMicArmies"""

    common: "Common" = betterproto.message_field(1)
    id: int = betterproto.uint64_field(2)
    battle_items: List["LinkMicArmiesItems"] = betterproto.message_field(3)
    id2: int = betterproto.uint64_field(4)
    time_stamp1: int = betterproto.uint64_field(5)
    time_stamp2: int = betterproto.uint64_field(6)
    battle_status: int = betterproto.int32_field(7)
    data1: int = betterproto.uint64_field(8)
    data2: int = betterproto.uint64_field(9)
    data3: int = betterproto.uint32_field(10)
    image: "Image" = betterproto.message_field(11)
    data4: int = betterproto.uint32_field(12)
    data5: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattle(betterproto.Message):
    """@WebcastLinkMicBattle"""

    common: "Common" = betterproto.message_field(1)
    id: int = betterproto.uint64_field(2)
    battle_config: "WebcastLinkMicBattleLinkMicBattleConfig" = (
        betterproto.message_field(3)
    )
    data2: int = betterproto.uint32_field(4)
    details: List[
        "WebcastLinkMicBattleLinkMicBattleDetails"
    ] = betterproto.message_field(5)
    teams1: List["WebcastLinkMicBattleLinkMicBattleTeam"] = betterproto.message_field(9)
    teams2: List["WebcastLinkMicBattleLinkMicBattleTeam"] = betterproto.message_field(
        10
    )
    team_data: List[
        "WebcastLinkMicBattleLinkMicBattleTeamData"
    ] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleConfig(betterproto.Message):
    id1: int = betterproto.uint64_field(1)
    timestamp: int = betterproto.uint64_field(2)
    data1: int = betterproto.uint32_field(3)
    id2: int = betterproto.uint64_field(4)
    data2: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleData(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    data1: int = betterproto.uint32_field(2)
    data2: int = betterproto.uint32_field(3)
    data3: int = betterproto.uint32_field(5)
    url: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleDetails(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    details: "WebcastLinkMicBattleLinkMicBattleData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleTeam(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    users: List["User"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleTeamData(betterproto.Message):
    team_id: int = betterproto.uint64_field(1)
    data: "WebcastLinkMicBattleLinkMicBattleData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WebcastLinkMicFanTicketMethod(betterproto.Message):
    """@WebcastLinkMicFanTicketMethod"""

    common: "Common" = betterproto.message_field(1)
    fan_ticket_room_notice: "FanTicketRoomNoticeContent" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WebcastLinkMicMethod(betterproto.Message):
    """@WebcastLinkMicMethod"""

    common: "Common" = betterproto.message_field(1)
    message_type: int = betterproto.int64_field(2)
    access_key: str = betterproto.string_field(3)
    anchor_linkmic_id: int = betterproto.int64_field(4)
    user_id: int = betterproto.int64_field(5)
    fan_ticket: int = betterproto.int64_field(6)
    total_link_mic_fan_ticket: int = betterproto.int64_field(7)
    channel_id: int = betterproto.int64_field(8)
    layout: int = betterproto.int64_field(9)
    vendor: int = betterproto.int64_field(10)
    dimension: int = betterproto.int64_field(11)
    theme: str = betterproto.string_field(12)
    invite_uid: int = betterproto.int64_field(13)


@dataclass(eq=False, repr=False)
class WebcastLiveIntroMessage(betterproto.Message):
    """@WebcastLiveIntroMessage"""

    common: "Common" = betterproto.message_field(1)
    room_id: int = betterproto.int64_field(2)
    audit_status: "AuditStatus" = betterproto.enum_field(3)
    content: str = betterproto.string_field(4)
    host: "User" = betterproto.message_field(5)
    intro_mode: int = betterproto.int32_field(6)
    badges: List["BadgeStruct"] = betterproto.message_field(7)
    language: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class WebcastUnauthorizedMemberMessage(betterproto.Message):
    """@WebcastUnauthorizedMemberMessage"""

    common: "Common" = betterproto.message_field(1)
    action: int = betterproto.int32_field(2)
    nick_name_prefix: "Text" = betterproto.message_field(3)
    nick_name: str = betterproto.string_field(4)
    enter_text: "Text" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class WebcastMsgDetectMessage(betterproto.Message):
    """@WebcastMsgDetectMessage"""

    common: "Common" = betterproto.message_field(1)
    detect_type: int = betterproto.int32_field(2)
    trigger_condition: "WebcastMsgDetectMessageTriggerCondition" = (
        betterproto.message_field(3)
    )
    time_info: "WebcastMsgDetectMessageTimeInfo" = betterproto.message_field(4)
    trigger_by: int = betterproto.int32_field(5)
    from_region: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class WebcastMsgDetectMessageTimeInfo(betterproto.Message):
    client_start_ms: int = betterproto.int64_field(1)
    api_recv_time_ms: int = betterproto.int64_field(2)
    api_send_to_goim_ms: int = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class WebcastMsgDetectMessageTriggerCondition(betterproto.Message):
    uplink_detect_http: bool = betterproto.bool_field(1)
    uplink_detect_web_socket: bool = betterproto.bool_field(2)
    detect_p2_p_msg: bool = betterproto.bool_field(3)
    detect_room_msg: bool = betterproto.bool_field(4)
    http_optimize: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class WebcastOecLiveShoppingMessage(betterproto.Message):
    """@WebcastOecLiveShoppingMessage"""

    common: "Common" = betterproto.message_field(1)
    data1: int = betterproto.uint32_field(2)
    shop_data: "WebcastOecLiveShoppingMessageLiveShoppingData" = (
        betterproto.message_field(4)
    )
    shop_timings: "TimeStampContainer" = betterproto.message_field(5)
    details: "WebcastOecLiveShoppingMessageLiveShoppingDetails" = (
        betterproto.message_field(9)
    )


@dataclass(eq=False, repr=False)
class WebcastOecLiveShoppingMessageLiveShoppingData(betterproto.Message):
    title: str = betterproto.string_field(1)
    price_string: str = betterproto.string_field(2)
    image_url: str = betterproto.string_field(3)
    shop_url: str = betterproto.string_field(4)
    data1: int = betterproto.uint64_field(6)
    shop_name: str = betterproto.string_field(7)
    data2: int = betterproto.uint64_field(8)
    shop_url2: str = betterproto.string_field(9)
    data3: int = betterproto.uint64_field(10)
    data4: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class WebcastOecLiveShoppingMessageLiveShoppingDetails(betterproto.Message):
    id1: str = betterproto.string_field(1)
    data1: str = betterproto.string_field(3)
    data2: int = betterproto.uint32_field(4)
    timestamp: int = betterproto.uint64_field(5)
    data: "ValueLabel" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class WebcastRoomPinMessage(betterproto.Message):
    """@WebcastRoomPinMessage  Host Pins comment to stream"""

    common: "Common" = betterproto.message_field(1)
    pinned_message: bytes = betterproto.bytes_field(2)
    original_msg_type: str = betterproto.string_field(30)
    timestamp: int = betterproto.uint64_field(31)


@dataclass(eq=False, repr=False)
class WebcastSystemMessage(betterproto.Message):
    """@SystemMessage"""

    common: "Common" = betterproto.message_field(1)
    message: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class WebcastLinkMessage(betterproto.Message):
    """@WebcastLinkMessage"""

    common: "Common" = betterproto.message_field(1)
    data1: int = betterproto.uint32_field(2)
    data2: int = betterproto.uint64_field(3)
    data3: int = betterproto.uint32_field(4)
    data: "WebcastLinkMessageLinkMessageData" = betterproto.message_field(18)
    user: "WebcastLinkMessageLinkMessageUserContainer" = betterproto.message_field(20)
    token: str = betterproto.string_field(200)


@dataclass(eq=False, repr=False)
class WebcastLinkMessageLinkMessageData(betterproto.Message):
    data: "DataContainer" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class WebcastLinkMessageLinkMessageUserContainer(betterproto.Message):
    user: "WebcastLinkMessageLinkMessageUserContainerLinkMessageUser" = (
        betterproto.message_field(1)
    )
    other_users: List[
        "WebcastLinkMessageLinkMessageUserContainerLinkMessageUser"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WebcastLinkMessageLinkMessageUserContainerLinkMessageUser(betterproto.Message):
    user: "User" = betterproto.message_field(1)
    time_stamp: int = betterproto.uint64_field(2)
    data1: int = betterproto.uint32_field(4)
    id_string: str = betterproto.string_field(5)
    data2: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WebcastLinkLayerMessage(betterproto.Message):
    """@WebcastLinkLayerMessage"""

    common: "Common" = betterproto.message_field(1)
    message_type: "LinkLayerMessageType" = betterproto.enum_field(2)
    channel_id: int = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class RoomVerifyMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    action: int = betterproto.int32_field(2)
    content: str = betterproto.string_field(3)
    notice_type: int = betterproto.int64_field(4)
    close_room: bool = betterproto.bool_field(5)
